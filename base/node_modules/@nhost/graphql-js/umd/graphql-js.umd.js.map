{"version":3,"file":"graphql-js.umd.js","sources":["../../../node_modules/.pnpm/unfetch@4.2.0/node_modules/unfetch/dist/unfetch.module.js","../../../node_modules/.pnpm/isomorphic-unfetch@3.1.0_encoding@0.1.13/node_modules/isomorphic-unfetch/browser.js","../src/parse-args.ts","../src/resolve-request-document.ts","../src/client.ts"],"sourcesContent":["export default function(e,n){return n=n||{},new Promise(function(t,r){var s=new XMLHttpRequest,o=[],u=[],i={},a=function(){return{ok:2==(s.status/100|0),statusText:s.statusText,status:s.status,url:s.responseURL,text:function(){return Promise.resolve(s.responseText)},json:function(){return Promise.resolve(s.responseText).then(JSON.parse)},blob:function(){return Promise.resolve(new Blob([s.response]))},clone:a,headers:{keys:function(){return o},entries:function(){return u},get:function(e){return i[e.toLowerCase()]},has:function(e){return e.toLowerCase()in i}}}};for(var l in s.open(n.method||\"get\",e,!0),s.onload=function(){s.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm,function(e,n,t){o.push(n=n.toLowerCase()),u.push([n,t]),i[n]=i[n]?i[n]+\",\"+t:t}),t(a())},s.onerror=r,s.withCredentials=\"include\"==n.credentials,n.headers)s.setRequestHeader(l,n.headers[l]);s.send(n.body||null)})}\n//# sourceMappingURL=unfetch.module.js.map\n","module.exports = self.fetch || (self.fetch = require('unfetch').default || require('unfetch'));\n","import { RequestDocument, RequestOptions, Variables } from './types'\n\nexport function parseRequestArgs<V extends Variables = Variables>(\n  documentOrOptions: RequestDocument | RequestOptions<V>,\n  variables?: V,\n  config?: RequestInit\n): RequestOptions<V> {\n  return (\n    (documentOrOptions as RequestOptions<V>).document\n      ? documentOrOptions\n      : {\n          document: documentOrOptions,\n          variables,\n          config\n        }\n  ) as RequestOptions<V>\n}\n","import { DocumentNode, OperationDefinitionNode, parse, print } from 'graphql'\nimport { RequestDocument } from './types'\n\n/**\n * helpers\n */\n\nfunction extractOperationName(document: DocumentNode): string | undefined {\n  let operationName = undefined\n\n  const operationDefinitions = document.definitions.filter(\n    (definition) => definition.kind === 'OperationDefinition'\n  ) as OperationDefinitionNode[]\n\n  if (operationDefinitions.length === 1) {\n    operationName = operationDefinitions[0].name?.value\n  }\n\n  return operationName\n}\n\nexport function resolveRequestDocument(document: RequestDocument): {\n  query: string\n  operationName?: string\n} {\n  if (typeof document === 'string') {\n    let operationName = undefined\n\n    try {\n      const parsedDocument = parse(document)\n      operationName = extractOperationName(parsedDocument)\n    } catch (err) {\n      // Failed parsing the document, the operationName will be undefined\n    }\n\n    return { query: document, operationName }\n  }\n\n  const operationName = extractOperationName(document)\n\n  return { query: print(document), operationName }\n}\n","import { TypedDocumentNode } from '@graphql-typed-document-node/core'\nimport fetch from 'isomorphic-unfetch'\nimport { parseRequestArgs } from './parse-args'\nimport { resolveRequestDocument } from './resolve-request-document'\nimport {\n  NhostGraphqlConstructorParams,\n  NhostGraphqlRequestConfig,\n  NhostGraphqlRequestResponse,\n  RemoveIndex,\n  RequestDocument,\n  RequestOptions,\n  Variables\n} from './types'\n\n/**\n * @alias GraphQL\n */\nexport class NhostGraphqlClient {\n  readonly _url: string\n  private accessToken: string | null\n  private adminSecret?: string\n\n  constructor(params: NhostGraphqlConstructorParams) {\n    const { url, adminSecret } = params\n\n    this._url = url\n    this.accessToken = null\n    this.adminSecret = adminSecret\n  }\n\n  /**\n   * Use `nhost.graphql.request` to send a GraphQL request. For more serious GraphQL usage we recommend using a GraphQL client such as Apollo Client (https://www.apollographql.com/docs/react).\n   *\n   * @example\n   * ```ts\n   * const CUSTOMERS = gql`\n   *  query {\n   *   customers {\n   *    id\n   *    name\n   *  }\n   * }\n   * `\n   * const { data, error } = await nhost.graphql.request(CUSTOMERS)\n   * ```\n   *\n   * @docs https://docs.nhost.io/reference/javascript/graphql/request\n   */\n  request<T = any, V = Variables>(\n    document: RequestDocument | TypedDocumentNode<T, V>,\n    ...variablesAndRequestHeaders: V extends Record<any, never>\n      ? [variables?: V, config?: NhostGraphqlRequestConfig]\n      : keyof RemoveIndex<V> extends never\n      ? [variables?: V, config?: NhostGraphqlRequestConfig]\n      : [variables: V, config?: NhostGraphqlRequestConfig]\n  ): Promise<NhostGraphqlRequestResponse<T>>\n  async request<T = any, V extends Variables = Variables>(\n    options: RequestOptions<V, T>\n  ): Promise<NhostGraphqlRequestResponse<T>>\n  async request<T = any, V extends Variables = Variables>(\n    documentOrOptions: RequestDocument | TypedDocumentNode<T, V> | RequestOptions<V>,\n    ...variablesAndRequestHeaders: V extends Record<any, never>\n      ? [variables?: V, config?: NhostGraphqlRequestConfig]\n      : keyof RemoveIndex<V> extends never\n      ? [variables?: V, config?: NhostGraphqlRequestConfig]\n      : [variables: V, config?: NhostGraphqlRequestConfig]\n  ): Promise<NhostGraphqlRequestResponse<T>> {\n    const [variables, config] = variablesAndRequestHeaders\n    const requestOptions = parseRequestArgs(documentOrOptions, variables, config)\n\n    const { headers, ...otherOptions } = config || {}\n    const { query, operationName } = resolveRequestDocument(requestOptions.document)\n    try {\n      const response = await fetch(this.httpUrl, {\n        method: 'POST',\n        body: JSON.stringify({\n          operationName,\n          query,\n          variables\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          ...this.generateAccessTokenHeaders(),\n          ...headers\n        },\n        ...otherOptions\n      })\n      if (!response.ok) {\n        return {\n          data: null,\n          error: {\n            error: response.statusText,\n            message: response.statusText,\n            status: response.status\n          }\n        }\n      }\n      const { data, errors } = await response.json()\n\n      if (errors) {\n        return {\n          data: null,\n          error: errors\n        }\n      }\n      if (typeof data !== 'object' || Array.isArray(data) || data === null) {\n        return {\n          data: null,\n          error: {\n            error: 'invalid-response',\n            message: 'incorrect response data from GraphQL server',\n            status: 0\n          }\n        }\n      }\n\n      return { data, error: null }\n    } catch (e) {\n      const error = e as Error\n      return {\n        data: null,\n        error: {\n          message: error.message,\n          status: error.name === 'AbortError' ? 0 : 500,\n          error: error.name === 'AbortError' ? 'abort-error' : 'unknown'\n        }\n      }\n    }\n  }\n\n  /**\n   * Use `nhost.graphql.httpUrl` to get the GraphQL HTTP URL.\n   * @example\n   * ```ts\n   * const url = nhost.graphql.httpUrl;\n   * ```\n   *\n   * @docs https://docs.nhost.io/reference/javascript/graphql/get-http-url\n   */\n  get httpUrl(): string {\n    return this._url\n  }\n\n  /**\n   * Use `nhost.graphql.wsUrl` to get the GraphQL WebSocket URL.\n   * @example\n   * ```ts\n   * const url = nhost.graphql.wsUrl;\n   * ```\n   *\n   * @docs https://docs.nhost.io/reference/javascript/graphql/get-ws-url\n   */\n  get wsUrl(): string {\n    return this._url.replace(/^(http)(s?):\\/\\//, 'ws$2://')\n  }\n\n  /**\n   * Use `nhost.graphql.url` to get the GraphQL URL.\n   * @deprecated Use `nhost.graphql.httpUrl` and `nhost.graphql.wsUrl` instead.\n   */\n  get url(): string {\n    return this._url\n  }\n\n  /**\n   * Use `nhost.graphql.getUrl()` to get the GraphQL URL.\n   * @deprecated Use `nhost.graphql.httpUrl` and `nhost.graphql.wsUrl` instead.\n   */\n  getUrl(): string {\n    return this._url\n  }\n\n  /**\n   * Use `nhost.graphql.setAccessToken` to a set an access token to be used in subsequent graphql requests. Note that if you're signin in users with `nhost.auth.signIn()` the access token will be set automatically.\n   *\n   * @example\n   * ```ts\n   * nhost.graphql.setAccessToken('some-access-token')\n   * ```\n   *\n   * @docs https://docs.nhost.io/reference/javascript/graphql/set-access-token\n   */\n  setAccessToken(accessToken: string | undefined) {\n    if (!accessToken) {\n      this.accessToken = null\n      return\n    }\n\n    this.accessToken = accessToken\n  }\n\n  private generateAccessTokenHeaders(): NhostGraphqlRequestConfig['headers'] {\n    if (this.adminSecret) {\n      return {\n        'x-hasura-admin-secret': this.adminSecret\n      }\n    }\n    if (this.accessToken) {\n      return {\n        Authorization: `Bearer ${this.accessToken}`\n      }\n    }\n    return {}\n  }\n}\n"],"names":["unfetch_module","n","t","r","s","o","u","a","e","l","browser","require$$0","parseRequestArgs","documentOrOptions","variables","config","extractOperationName","document","operationName","operationDefinitions","definition","_a","resolveRequestDocument","parsedDocument","parse","print","NhostGraphqlClient","params","url","adminSecret","variablesAndRequestHeaders","requestOptions","headers","otherOptions","query","response","fetch","data","errors","error","accessToken"],"mappings":"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","x_google_ignoreList":[0,1]}